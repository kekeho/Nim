/* Generated by the Nim Compiler v0.19.9 */
/*   (c) 2018 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI36032 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI171074 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI40262 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI173526 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI62442 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62438 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62434 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62430 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62426 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62422 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62418 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62414 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62410 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62406 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62402 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62398 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62394 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62390 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62386 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62382 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62378 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62374 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62370 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62366 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62277 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62275 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI62221 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI62520 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI62518 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI62516 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI62225 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62223 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI64042 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI40250 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40258 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI36006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI52541 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI40208 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40314 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI36016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI36040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI36042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI40308 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI40226 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40228 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40242 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40246 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI40246 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40246.node = NNI40246;
var NNI40242 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40242.node = NNI40242;
var NNI40228 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40228.node = NNI40228;
NTI40308.base = NTI40226;
NTI40314.base = NTI40226;
var NNI40226 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI40308, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI36042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI36040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI36040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI36016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI40314, name: "up", sons: null}]};
NTI40226.node = NNI40226;
var NNI40208 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40208.node = NNI40208;
NTI40226.base = NTI40208;
NTI40228.base = NTI40226;
NTI40242.base = NTI40228;
NTI40246.base = NTI40242;
var NNI52541 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36042, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}]};
NTI52541.node = NNI52541;
var NNI40258 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40258.node = NNI40258;
NTI40258.base = NTI40228;
var NNI40250 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40250.node = NNI40250;
NTI40250.base = NTI40228;
NTI62516.base = NTI62223;
NTI62518.base = NTI62223;
NTI62520.base = NTI62223;
var NNI62221 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI62221, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI62221, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI62221, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI62221, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI62221, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI62221, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI62221, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI62221, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI62221, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI62221, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI62221, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI62221, name: "NotationNode", len: 0, sons: null}}};
NTI62221.node = NNI62221;
var NNI62277 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI36042, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI36042, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI36042, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI36042, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI36042, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI36042, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI36042, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI36042, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI36042, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI36042, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI36042, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI36042, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI36042, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI36042, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI36042, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI36042, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI36042, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI36042, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI36042, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI36042, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI36042, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI36042, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI36042, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI36042, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI36042, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI36042, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI36042, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI36042, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI36042, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI36042, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI36042, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI36042, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI36042, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI36042, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI36042, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI36042, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI36042, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI36042, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI36042, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI36042, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI36042, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI36042, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI36042, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI36042, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI36042, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI36042, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI36042, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI36042, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI36042, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI36042, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI36042, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI36042, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI36042, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI36042, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI36042, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI36042, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI36042, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI36042, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI36042, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI36042, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI36042, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI36042, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI36042, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI36042, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI36042, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI36042, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI36042, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI36042, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI36042, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI36042, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI36042, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI36042, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI36042, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI36042, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI36042, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI36042, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI36042, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI36042, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI36042, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI36042, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI36042, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI36042, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI36042, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI36042, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI36042, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI36042, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI36042, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI36042, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI36042, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI36042, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI36006, name: "zIndex", sons: null}]};
NTI62277.node = NNI62277;
NTI62277.base = NTI40208;
NTI62275.base = NTI62277;
var NNI62225 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI62516, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI62518, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI62520, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI36042, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI62223, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI62223, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI62223, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI36042, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI62221, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI36042, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI62223, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI62223, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI36042, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI62275, name: "style", sons: null}]};
NTI62225.node = NNI62225;
var NNI62205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI62366, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI62370, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI62374, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI62378, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI62382, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI62386, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI62390, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI62394, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI62398, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI62402, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI62406, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI62410, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI62414, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI62418, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI62422, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI62426, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI62430, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI62434, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI62438, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI62442, name: "onunload", sons: null}]};
NTI62205.node = NNI62205;
NTI62205.base = NTI40208;
NTI62225.base = NTI62205;
NTI62223.base = NTI62225;
NTI64042.base = NTI62223;
NTI173526.base = NTI36042;
var NNI40262 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40262.node = NNI40262;
NTI40262.base = NTI40228;
var NNI171074 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36032, name: "Field1", sons: null}]};
NTI171074.node = NNI171074;

function makeNimstrLit(c_53391) {
		  var ln = c_53391.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_53391.charCodeAt(i);
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_54427, src_54428, ti_54429) {
	var result_54619 = null;

		switch (ti_54429.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_54401(ti_54429))) {
			result_54619 = src_54428;
			}
			else {
				result_54619 = [src_54428[0], src_54428[1]];
			}
			
			break;
		case 19:
			      if (dest_54427 === null || dest_54427 === undefined) {
        dest_54427 = {};
      }
      else {
        for (var key in dest_54427) { delete dest_54427[key]; }
      }
      for (var key in src_54428) { dest_54427[key] = src_54428[key]; }
      result_54619 = dest_54427;
    
			break;
		case 18:
		case 17:
			if (!((ti_54429.base == null))) {
			result_54619 = nimCopy(dest_54427, src_54428, ti_54429.base);
			}
			else {
			if ((ti_54429.kind == 17)) {
			result_54619 = (dest_54427 === null || dest_54427 === undefined) ? {m_type: ti_54429} : dest_54427;
			}
			else {
				result_54619 = (dest_54427 === null || dest_54427 === undefined) ? {} : dest_54427;
			}
			}
			nimCopyAux(result_54619, src_54428, ti_54429.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_54428 === null) {
        result_54619 = null;
      }
      else {
        if (dest_54427 === null || dest_54427 === undefined) {
          dest_54427 = new Array(src_54428.length);
        }
        else {
          dest_54427.length = src_54428.length;
        }
        result_54619 = dest_54427;
        for (var i = 0; i < src_54428.length; ++i) {
          result_54619[i] = nimCopy(result_54619[i], src_54428[i], ti_54429.base);
        }
      }
    
			break;
		case 28:
			      if (src_54428 !== null) {
        result_54619 = src_54428.slice(0);
      }
    
			break;
		default: 
			result_54619 = src_54428;
			break;
		}

	return result_54619;

}

function arrayConstr(len_54671, value_54672, typ_54673) {
		    var result = new Array(len_54671);
    for (var i = 0; i < len_54671; ++i) result[i] = nimCopy(null, value_54672, typ_54673);
    return result;
  

	
}

function cstrToNimstr(c_53408) {
		  var ln = c_53408.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_53408.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_53408.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_53425) {
		  if (s_53425 === null) return "";
  var len = s_53425.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_53425[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_53425[i] < 128)
      asciiPart[i] = fcc(s_53425[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_53018, ename_53019) {
		e_53018.name = ename_53019;
		if ((excHandler == 0)) {
		unhandledException(e_53018);
		}
		
		e_53018.trace = nimCopy(null, raw_write_stack_trace_52838(), NTI36040);
		throw e_53018;

	
}

function addInt(a_53803, b_53804) {
		    var result = a_53803 + b_53804;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckIndx(i_54690, a_54691, b_54692) {
			var Tmp1;

	var result_54693 = 0;

	BeforeRet: do {
			if (!(a_54691 <= i_54690)) Tmp1 = false; else {				Tmp1 = (i_54690 <= b_54692);			}		if (Tmp1) {
		result_54693 = i_54690;
		break BeforeRet;
		}
		else {
		raiseIndexError();
		}
		
	} while (false);

	return result_54693;

}

function subInt(a_53821, b_53822) {
		    var result = a_53821 - b_53822;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet2 = setConstr([65, 90]);

function chckRange(i_54709, a_54710, b_54711) {
			var Tmp1;

	var result_54712 = 0;

	BeforeRet: do {
			if (!(a_54710 <= i_54709)) Tmp1 = false; else {				Tmp1 = (i_54709 <= b_54711);			}		if (Tmp1) {
		result_54712 = i_54709;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_54712;

}
var ConstSet3 = setConstr(95, 32, 46);
var ConstSet4 = setConstr(95, 32, 46);

function mulInt(a_53839, b_53840) {
		    var result = a_53839 * b_53840;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet5 = setConstr([97, 122]);
var ConstSet6 = setConstr([65, 90], [97, 122]);
var ConstSet7 = setConstr([97, 122]);
var ConstSet8 = setConstr([65, 90]);

function nimMax(a_54158, b_54159) {
		var Tmp1;

	var result_54160 = 0;

	BeforeRet: do {
		if ((b_54159 <= a_54158)) {
		Tmp1 = a_54158;
		}
		else {
		Tmp1 = b_54159;
		}
		
		result_54160 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_54160;

}

function nimMin(a_54140, b_54141) {
		var Tmp1;

	var result_54142 = 0;

	BeforeRet: do {
		if ((a_54140 <= b_54141)) {
		Tmp1 = a_54140;
		}
		else {
		Tmp1 = b_54141;
		}
		
		result_54142 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_54142;

}
var nim_program_result = 0;
var global_raise_hook_50418 = [null];
var local_raise_hook_50423 = [null];
var out_of_mem_hook_50426 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var alternative_173285 = [null];

function is_fat_pointer_54401(ti_54403) {
	var result_54404 = false;

	BeforeRet: do {
		result_54404 = !((ConstSet1[ti_54403.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_54404;

}

function nimCopyAux(dest_54432, src_54433, n_54435) {
		switch (n_54435.kind) {
		case 0:
			break;
		case 1:
			      dest_54432[n_54435.offset] = nimCopy(dest_54432[n_54435.offset], src_54433[n_54435.offset], n_54435.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_54435.sons.length; i++) {
      nimCopyAux(dest_54432, src_54433, n_54435.sons[i]);
    }
    
			break;
		case 3:
			      dest_54432[n_54435.offset] = nimCopy(dest_54432[n_54435.offset], src_54433[n_54435.offset], n_54435.typ);
      for (var i = 0; i < n_54435.sons.length; ++i) {
        nimCopyAux(dest_54432, src_54433, n_54435.sons[i][1]);
      }
    
			break;
		}

	
}

function add_50438(x_50441, x_50441_Idx, y_50442) {
		      if (x_50441[x_50441_Idx] === null) { x_50441[x_50441_Idx] = []; }
      var off = x_50441[x_50441_Idx].length;
      x_50441[x_50441_Idx].length += y_50442.length;
      for (var i = 0; i < y_50442.length; ++i) {
        x_50441[x_50441_Idx][off+i] = y_50442.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_52536(f_52538) {
					var Tmp3;

	var result_52539 = [null];

		var it_52547 = f_52538;
		var i_52549 = 0;
		var total_52551 = 0;
		var temp_frames_52558 = arrayConstr(64, {Field0: null, Field1: 0}, NTI52541);
		L1: do {
				L2: while (true) {
					if (!!((it_52547 == null))) Tmp3 = false; else {						Tmp3 = (i_52549 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_52558[i_52549].Field0 = it_52547.procname;
					temp_frames_52558[i_52549].Field1 = it_52547.line;
					i_52549 += 1;
					total_52551 += 1;
					it_52547 = it_52547.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_52547 == null))) break L5;
					total_52551 += 1;
					it_52547 = it_52547.prev;
				}
		} while(false);
		result_52539[0] = nimCopy(null, [], NTI36040);
		if (!((total_52551 == i_52549))) {
		if (result_52539[0] != null) { result_52539[0] = (result_52539[0]).concat(makeNimstrLit("(")); } else { result_52539[0] = makeNimstrLit("("); };
		if (result_52539[0] != null) { result_52539[0] = (result_52539[0]).concat(cstrToNimstr(((total_52551 - i_52549))+"")); } else { result_52539[0] = cstrToNimstr(((total_52551 - i_52549))+"").slice(); };
		if (result_52539[0] != null) { result_52539[0] = (result_52539[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_52539[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_52821 = 0;
			var colontmp__173426 = 0;
			colontmp__173426 = (i_52549 - 1);
			var res_173431 = colontmp__173426;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_173431)) break L8;
						j_52821 = res_173431;
						add_50438(result_52539, 0, temp_frames_52558[j_52821].Field0);
						if ((0 < temp_frames_52558[j_52821].Field1)) {
						if (result_52539[0] != null) { result_52539[0] = (result_52539[0]).concat(makeNimstrLit(", line: ")); } else { result_52539[0] = makeNimstrLit(", line: "); };
						if (result_52539[0] != null) { result_52539[0] = (result_52539[0]).concat(cstrToNimstr((temp_frames_52558[j_52821].Field1)+"")); } else { result_52539[0] = cstrToNimstr((temp_frames_52558[j_52821].Field1)+"").slice(); };
						}
						
						if (result_52539[0] != null) { result_52539[0] = (result_52539[0]).concat(makeNimstrLit("\x0A")); } else { result_52539[0] = makeNimstrLit("\x0A"); };
						res_173431 -= 1;
					}
			} while(false);
		} while(false);

	return result_52539[0];

}

function raw_write_stack_trace_52838() {
	var result_52840 = null;

		if (!((framePtr == null))) {
		result_52840 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_52536(framePtr) || []), NTI36040);
		}
		else {
			result_52840 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI36040);
		}
		

	return result_52840;

}

function unhandledException(e_52899) {
		var buf_52900 = [[]];
		if (!(((e_52899.message != null ? e_52899.message.length : 0) == 0))) {
		if (buf_52900[0] != null) { buf_52900[0] = (buf_52900[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_52900[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_52900[0] != null) { buf_52900[0] = (buf_52900[0]).concat(e_52899.message); } else { buf_52900[0] = e_52899.message.slice(); };
		}
		else {
		if (buf_52900[0] != null) { buf_52900[0] = (buf_52900[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_52900[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_52900[0] != null) { buf_52900[0] = (buf_52900[0]).concat(makeNimstrLit(" [")); } else { buf_52900[0] = makeNimstrLit(" ["); };
		add_50438(buf_52900, 0, e_52899.name);
		if (buf_52900[0] != null) { buf_52900[0] = (buf_52900[0]).concat(makeNimstrLit("]\x0A")); } else { buf_52900[0] = makeNimstrLit("]\x0A"); };
		if (buf_52900[0] != null) { buf_52900[0] = (buf_52900[0]).concat(raw_write_stack_trace_52838()); } else { buf_52900[0] = raw_write_stack_trace_52838().slice(); };
		var cbuf_53001 = toJSStr(buf_52900[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_53001);
  }
  else {
    throw cbuf_53001;
  }
  

	
}

function raiseOverflow() {
		var e_53252 = null;
		e_53252 = {m_type: NTI40246, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_53252.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI36040);
		e_53252.parent = null;
		raiseException(e_53252, "OverflowError");

	
}

function is_whitespace_172639(text_172641) {
		     return !/[^\s]/.test(text_172641);
  

	
}

function is_whitespace_172656(x_172658) {
		var Tmp1;
		var Tmp2;

	var result_172659 = false;

	var F={procname:"dochack.isWhitespace",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 134;
		if (!(x_172658.nodeName == "#text")) Tmp2 = false; else {			Tmp2 = is_whitespace_172639(x_172658.textContent);		}		if (Tmp2) Tmp1 = true; else {			Tmp1 = (x_172658.nodeName == "#comment");		}		result_172659 = Tmp1;
	framePtr = F.prev;

	return result_172659;

}

function raiseIndexError() {
		var e_53327 = null;
		e_53327 = {m_type: NTI40258, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_53327.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI36040);
		e_53327.parent = null;
		raiseException(e_53327, "IndexError");

	
}

function to_toc_172673(x_172675, father_172676) {
								var Tmp5;
						var Tmp6;
						var Tmp7;
						var Tmp8;
			var Tmp15;

	var F={procname:"dochack.toToc",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if ((x_172675.nodeName == "UL")) {
		F.line = 139;
		var f_172695 = {heading: null, kids: [], sortId: (father_172676.kids != null ? father_172676.kids.length : 0), doSort: false};
		F.line = 140;
		var i_172697 = 0;
		L1: do {
			F.line = 141;
				L2: while (true) {
				if (!(i_172697 < x_172675.childNodes.length)) break L2;
					F.line = 142;
					var nxt_172698 = addInt(i_172697, 1);
					L3: do {
						F.line = 143;
							L4: while (true) {
								if (!(nxt_172698 < x_172675.childNodes.length)) Tmp5 = false; else {									Tmp5 = is_whitespace_172656(x_172675.childNodes[nxt_172698]);								}							if (!Tmp5) break L4;
								F.line = 144;
								nxt_172698 = addInt(nxt_172698, 1);
							}
					} while(false);
						if (!(nxt_172698 < x_172675.childNodes.length)) Tmp8 = false; else {							Tmp8 = (x_172675.childNodes[i_172697].nodeName == "LI");						}						if (!Tmp8) Tmp7 = false; else {							Tmp7 = (x_172675.childNodes[i_172697].childNodes.length == 1);						}						if (!Tmp7) Tmp6 = false; else {							Tmp6 = (x_172675.childNodes[nxt_172698].nodeName == "UL");						}					if (Tmp6) {
					F.line = 147;
					var e_172723 = {heading: x_172675.childNodes[i_172697].childNodes[0], kids: [], sortId: (f_172695.kids != null ? f_172695.kids.length : 0), doSort: false};
					F.line = 148;
					var it_172724 = x_172675.childNodes[nxt_172698];
					L9: do {
						F.line = 149;
						var j_172732 = 0;
						F.line = 3053;
						var colontmp__173402 = 0;
						F.line = 149;
						colontmp__173402 = it_172724.childNodes.length;
						F.line = 3054;
						var i_173403 = 0;
						L10: do {
							F.line = 3055;
								L11: while (true) {
								if (!(i_173403 < colontmp__173402)) break L11;
									F.line = 149;
									j_172732 = i_173403;
									F.line = 150;
									to_toc_172673(it_172724.childNodes[j_172732], e_172723);
									F.line = 3057;
									i_173403 = addInt(i_173403, 1);
								}
						} while(false);
					} while(false);
					F.line = 151;
					if (f_172695.kids != null) { f_172695.kids.push(e_172723); } else { f_172695.kids = [e_172723]; };
					F.line = 152;
					i_172697 = addInt(nxt_172698, 1);
					}
					else {
						F.line = 154;
						to_toc_172673(x_172675.childNodes[i_172697], f_172695);
						F.line = 155;
						i_172697 = addInt(i_172697, 1);
					}
					
				}
		} while(false);
		F.line = 156;
		if (father_172676.kids != null) { father_172676.kids.push(f_172695); } else { father_172676.kids = [f_172695]; };
		}
		else {
		if (is_whitespace_172656(x_172675)) {
		}
		else {
		if ((x_172675.nodeName == "LI")) {
		F.line = 160;
		var idx_172767 = [];
		L12: do {
			F.line = 161;
			var i_172775 = 0;
			F.line = 3053;
			var colontmp__173407 = 0;
			F.line = 161;
			colontmp__173407 = x_172675.childNodes.length;
			F.line = 3054;
			var i_173408 = 0;
			L13: do {
				F.line = 3055;
					L14: while (true) {
					if (!(i_173408 < colontmp__173407)) break L14;
						F.line = 161;
						i_172775 = i_173408;
						if (!(is_whitespace_172656(x_172675.childNodes[i_172775]))) {
						F.line = 162;
						if (idx_172767 != null) { idx_172767.push(i_172775); } else { idx_172767 = [i_172775]; };
						}
						
						F.line = 3057;
						i_173408 = addInt(i_173408, 1);
					}
			} while(false);
		} while(false);
			if (!((idx_172767 != null ? idx_172767.length : 0) == 2)) Tmp15 = false; else {				Tmp15 = (x_172675.childNodes[idx_172767[chckIndx(1, 0, idx_172767.length+0-1)-0]].nodeName == "UL");			}		if (Tmp15) {
		F.line = 164;
		var e_172806 = {heading: x_172675.childNodes[idx_172767[chckIndx(0, 0, idx_172767.length+0-1)-0]], kids: [], sortId: (father_172676.kids != null ? father_172676.kids.length : 0), doSort: false};
		F.line = 166;
		var it_172807 = x_172675.childNodes[idx_172767[chckIndx(1, 0, idx_172767.length+0-1)-0]];
		L16: do {
			F.line = 167;
			var j_172815 = 0;
			F.line = 3053;
			var colontmp__173413 = 0;
			F.line = 167;
			colontmp__173413 = it_172807.childNodes.length;
			F.line = 3054;
			var i_173414 = 0;
			L17: do {
				F.line = 3055;
					L18: while (true) {
					if (!(i_173414 < colontmp__173413)) break L18;
						F.line = 167;
						j_172815 = i_173414;
						F.line = 168;
						to_toc_172673(it_172807.childNodes[j_172815], e_172806);
						F.line = 3057;
						i_173414 = addInt(i_173414, 1);
					}
			} while(false);
		} while(false);
		F.line = 169;
		if (father_172676.kids != null) { father_172676.kids.push(e_172806); } else { father_172676.kids = [e_172806]; };
		}
		else {
			L19: do {
				F.line = 171;
				var i_172830 = 0;
				F.line = 3053;
				var colontmp__173418 = 0;
				F.line = 171;
				colontmp__173418 = x_172675.childNodes.length;
				F.line = 3054;
				var i_173419 = 0;
				L20: do {
					F.line = 3055;
						L21: while (true) {
						if (!(i_173419 < colontmp__173418)) break L21;
							F.line = 171;
							i_172830 = i_173419;
							F.line = 172;
							to_toc_172673(x_172675.childNodes[i_172830], father_172676);
							F.line = 3057;
							i_173419 = addInt(i_173419, 1);
						}
				} while(false);
			} while(false);
		}
		
		}
		else {
			F.line = 174;
		if (father_172676.kids != null) { father_172676.kids.push({heading: x_172675, kids: [], sortId: (father_172676.kids != null ? father_172676.kids.length : 0), doSort: false}); } else { father_172676.kids = [{heading: x_172675, kids: [], sortId: (father_172676.kids != null ? father_172676.kids.length : 0), doSort: false}]; };
		}
		}}
	framePtr = F.prev;

	
}

function extract_items_172309(x_172311, heading_172312, items_172315, items_172315_Idx) {
			var Tmp1;

	var F={procname:"dochack.extractItems",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((x_172311 == null)) {
		F.line = 81;
		break BeforeRet;
		}
		
			if (!!((x_172311.heading == null))) Tmp1 = false; else {				Tmp1 = (x_172311.heading.textContent == heading_172312);			}		if (Tmp1) {
		L2: do {
			F.line = 83;
			var i_172344 = 0;
			F.line = 3053;
			var colontmp__173437 = 0;
			F.line = 83;
			colontmp__173437 = (x_172311.kids != null ? x_172311.kids.length : 0);
			F.line = 3054;
			var i_173438 = 0;
			L3: do {
				F.line = 3055;
					L4: while (true) {
					if (!(i_173438 < colontmp__173437)) break L4;
						F.line = 83;
						i_172344 = i_173438;
						F.line = 84;
						if (items_172315[items_172315_Idx] != null) { items_172315[items_172315_Idx].push(x_172311.kids[chckIndx(i_172344, 0, x_172311.kids.length+0-1)-0].heading); } else { items_172315[items_172315_Idx] = [x_172311.kids[chckIndx(i_172344, 0, x_172311.kids.length+0-1)-0].heading]; };
						F.line = 3057;
						i_173438 = addInt(i_173438, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			L5: do {
				F.line = 86;
				var i_172364 = 0;
				F.line = 3053;
				var colontmp__173442 = 0;
				F.line = 86;
				colontmp__173442 = (x_172311.kids != null ? x_172311.kids.length : 0);
				F.line = 3054;
				var i_173443 = 0;
				L6: do {
					F.line = 3055;
						L7: while (true) {
						if (!(i_173443 < colontmp__173442)) break L7;
							F.line = 86;
							i_172364 = i_173443;
							F.line = 87;
							var it_172365 = x_172311.kids[chckIndx(i_172364, 0, x_172311.kids.length+0-1)-0];
							F.line = 88;
							extract_items_172309(it_172365, heading_172312, items_172315, items_172315_Idx);
							F.line = 3057;
							i_173443 = addInt(i_173443, 1);
						}
				} while(false);
			} while(false);
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function tree_172020(tag_172022, kids_172024) {
	var result_172025 = null;

	var F={procname:"dochack.tree",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 11;
		result_172025 = document.createElement(toJSStr(tag_172022));
		L1: do {
			F.line = 12;
			var k_172056 = null;
			F.line = 2307;
			var i_173460 = 0;
			L2: do {
				F.line = 2308;
					L3: while (true) {
					if (!(i_173460 < (kids_172024 != null ? kids_172024.length : 0))) break L3;
						F.line = 12;
						k_172056 = kids_172024[chckIndx(i_173460, 0, kids_172024.length+0-1)-0];
						F.line = 13;
						result_172025.appendChild(k_172056);
						F.line = 2310;
						i_173460 = addInt(i_173460, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_172025;

}

function text_172122(s_172124) {
	var result_172125 = null;

	var F={procname:"dochack.text",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 27;
		result_172125 = document.createTextNode(s_172124);
	framePtr = F.prev;

	return result_172125;

}

function sys_fatal_57436(message_57440) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3013;
		var e_57442 = null;
		F.line = 3014;
		e_57442 = {m_type: NTI40250, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 3015;
		e_57442.message = nimCopy(null, message_57440, NTI36040);
		F.line = 3016;
		raiseException(e_57442, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_57432(msg_57434) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3982;
		sys_fatal_57436(msg_57434);
	framePtr = F.prev;

	
}

function failed_assert_impl_57475(msg_57477) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3989;
		raise_assert_57432(msg_57477);
	framePtr = F.prev;

	
}

function uncovered_172925(x_172927) {
			var Tmp1;
		var Tmp2;

	var result_172928 = null;

	var F={procname:"dochack.uncovered",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
			if (!((x_172927.kids != null ? x_172927.kids.length : 0) == 0)) Tmp1 = false; else {				Tmp1 = !((x_172927.heading == null));			}		if (Tmp1) {
		F.line = 194;
		if (!(x_172927.heading.hasOwnProperty('__karaxMarker__'))) {
		Tmp2 = x_172927;
		}
		else {
		Tmp2 = null;
		}
		
		result_172928 = Tmp2;
		break BeforeRet;
		}
		
		F.line = 195;
		result_172928 = {heading: x_172927.heading, kids: [], sortId: x_172927.sortId, doSort: x_172927.doSort};
		L3: do {
			F.line = 197;
			var i_172967 = 0;
			F.line = 3053;
			var colontmp__173472 = 0;
			F.line = 197;
			colontmp__173472 = (x_172927.kids != null ? x_172927.kids.length : 0);
			F.line = 3054;
			var i_173473 = 0;
			L4: do {
				F.line = 3055;
					L5: while (true) {
					if (!(i_173473 < colontmp__173472)) break L5;
						F.line = 197;
						i_172967 = i_173473;
						F.line = 198;
						var y_172968 = uncovered_172925(x_172927.kids[chckIndx(i_172967, 0, x_172927.kids.length+0-1)-0]);
						if (!((y_172968 == null))) {
						F.line = 199;
						if (result_172928.kids != null) { result_172928.kids.push(y_172968); } else { result_172928.kids = [y_172968]; };
						}
						
						F.line = 3057;
						i_173473 = addInt(i_173473, 1);
					}
			} while(false);
		} while(false);
		if (((result_172928.kids != null ? result_172928.kids.length : 0) == 0)) {
		F.line = 200;
		result_172928 = null;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_172928;

}

function merge_tocs_173002(orig_173004, news_173005) {
	var result_173006 = null;

	var F={procname:"dochack.mergeTocs",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 203;
		result_173006 = uncovered_172925(orig_173004);
		if ((result_173006 == null)) {
		F.line = 205;
		result_173006 = news_173005;
		}
		else {
			L1: do {
				F.line = 207;
				var i_173027 = 0;
				F.line = 3053;
				var colontmp__173466 = 0;
				F.line = 207;
				colontmp__173466 = (news_173005.kids != null ? news_173005.kids.length : 0);
				F.line = 3054;
				var i_173467 = 0;
				L2: do {
					F.line = 3055;
						L3: while (true) {
						if (!(i_173467 < colontmp__173466)) break L3;
							F.line = 207;
							i_173027 = i_173467;
							F.line = 208;
							if (result_173006.kids != null) { result_173006.kids.push(news_173005.kids[chckIndx(i_173027, 0, news_173005.kids.length+0-1)-0]); } else { result_173006.kids = [news_173005.kids[chckIndx(i_173027, 0, news_173005.kids.length+0-1)-0]]; };
							F.line = 3057;
							i_173467 = addInt(i_173467, 1);
						}
				} while(false);
			} while(false);
		}
		
	framePtr = F.prev;

	return result_173006;

}

function build_toc_173048(orig_173050, types_173052, procs_173053) {
	var result_173054 = null;

	var F={procname:"dochack.buildToc",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 211;
		var new_stuff_173068 = {heading: null, kids: [], doSort: true, sortId: 0};
		L1: do {
			F.line = 212;
			var t_173214 = null;
			F.line = 4021;
			var i_173455 = 0;
			F.line = 4022;
			var l_173456 = (types_173052 != null ? types_173052.length : 0);
			L2: do {
				F.line = 4023;
					L3: while (true) {
					if (!(i_173455 < l_173456)) break L3;
						F.line = 212;
						t_173214 = types_173052[chckIndx(i_173455, 0, types_173052.length+0-1)-0];
						F.line = 213;
						var c_173228 = {heading: t_173214.cloneNode(true), kids: [], doSort: true, sortId: 0};
						F.line = 214;
						t_173214.__karaxMarker__ = true;
						L4: do {
							F.line = 215;
							var p_173235 = null;
							F.line = 4021;
							var i_173452 = 0;
							F.line = 4022;
							var l_173453 = (procs_173053 != null ? procs_173053.length : 0);
							L5: do {
								F.line = 4023;
									L6: while (true) {
									if (!(i_173452 < l_173453)) break L6;
										F.line = 215;
										p_173235 = procs_173053[chckIndx(i_173452, 0, procs_173053.length+0-1)-0];
										if (!(p_173235.hasOwnProperty('__karaxMarker__'))) {
										F.line = 217;
										var xx_173236 = p_173235.parentNode.getElementsByClassName("attachedType");
										if ((((xx_173236 != null ? xx_173236.length : 0) == 1) && (xx_173236[chckIndx(0, 0, xx_173236.length+0-1)-0].textContent == t_173214.textContent))) {
										F.line = 220;
										var q_173244 = tree_172020(makeNimstrLit("A"), [text_172122(p_173235.title)]);
										F.line = 221;
										q_173244.setAttribute("href", p_173235.getAttribute("href"));
										F.line = 222;
										if (c_173228.kids != null) { c_173228.kids.push({heading: q_173244, kids: [], sortId: 0, doSort: false}); } else { c_173228.kids = [{heading: q_173244, kids: [], sortId: 0, doSort: false}]; };
										F.line = 223;
										p_173235.__karaxMarker__ = true;
										}
										
										}
										
										F.line = 4025;
										i_173452 = addInt(i_173452, 1);
										if (!(((procs_173053 != null ? procs_173053.length : 0) == l_173453))) {
										F.line = 4026;
										failed_assert_impl_57475(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(4026, 11) `len(a) == L` seq modified while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						F.line = 224;
						if (new_stuff_173068.kids != null) { new_stuff_173068.kids.push(c_173228); } else { new_stuff_173068.kids = [c_173228]; };
						F.line = 4025;
						i_173455 = addInt(i_173455, 1);
						if (!(((types_173052 != null ? types_173052.length : 0) == l_173456))) {
						F.line = 4026;
						failed_assert_impl_57475(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(4026, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 225;
		result_173054 = merge_tocs_173002(orig_173050, new_stuff_173068);
	framePtr = F.prev;

	return result_173054;

}

function add_172070(parent_172072, kid_172073) {
			var Tmp1;
				var Tmp2;

	var F={procname:"dochack.add",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
			if (!(parent_172072.nodeName == "TR")) Tmp1 = false; else {				if ((kid_172073.nodeName == "TD")) Tmp2 = true; else {					Tmp2 = (kid_172073.nodeName == "TH");				}				Tmp1 = Tmp2;			}		if (Tmp1) {
		F.line = 18;
		var k_172074 = document.createElement("TD");
		F.line = 19;
		k_172074.appendChild(kid_172073);
		F.line = 20;
		parent_172072.appendChild(k_172074);
		}
		else {
			F.line = 22;
		parent_172072.appendChild(kid_172073);
		}
		
	framePtr = F.prev;

	
}

function set_class_172088(e_172090, value_172091) {
	var F={procname:"dochack.setClass",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 25;
		e_172090.setAttribute("class", toJSStr(value_172091));
	framePtr = F.prev;

	
}

function to_html_172379(x_172381, is_root_172382) {
			var Tmp1;

		function HEX3Aanonymous_172422(a_172424, b_172425) {
					var Tmp1;

			var result_172426 = 0;

			var F={procname:"toHtml.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
			BeforeRet: do {
					if (!!((a_172424.heading == null))) Tmp1 = false; else {						Tmp1 = !((b_172425.heading == null));					}				if (Tmp1) {
				F.line = 106;
				var x_172443 = a_172424.heading.textContent;
				F.line = 107;
				var y_172444 = b_172425.heading.textContent;
				if ((x_172443 < y_172444)) {
				F.line = 108;
				result_172426 = -1;
				break BeforeRet;
				}
				
				if ((y_172444 < x_172443)) {
				F.line = 109;
				result_172426 = 1;
				break BeforeRet;
				}
				
				F.line = 110;
				result_172426 = 0;
				break BeforeRet;
				}
				else {
					F.line = 113;
					result_172426 = subInt(a_172424.sortId, b_172425.sortId);
					break BeforeRet;
				}
				
			} while (false);
			framePtr = F.prev;

			return result_172426;

		}

	var result_172383 = null;

	var F={procname:"dochack.toHtml",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((x_172381 == null)) {
		F.line = 91;
		result_172383 = null;
		break BeforeRet;
		}
		
		if (((x_172381.kids != null ? x_172381.kids.length : 0) == 0)) {
		if ((x_172381.heading == null)) {
		F.line = 93;
		result_172383 = null;
		break BeforeRet;
		}
		
		F.line = 94;
		result_172383 = x_172381.heading.cloneNode(true);
		break BeforeRet;
		}
		
		F.line = 95;
		result_172383 = tree_172020(makeNimstrLit("DIV"), []);
			if (!!((x_172381.heading == null))) Tmp1 = false; else {				Tmp1 = !(x_172381.heading.hasOwnProperty('__karaxMarker__'));			}		if (Tmp1) {
		F.line = 97;
		add_172070(result_172383, x_172381.heading.cloneNode(true));
		}
		
		F.line = 98;
		var ul_172419 = tree_172020(makeNimstrLit("UL"), []);
		if (is_root_172382) {
		F.line = 100;
		set_class_172088(ul_172419, makeNimstrLit("simple simple-toc"));
		}
		else {
			F.line = 102;
		set_class_172088(ul_172419, makeNimstrLit("simple"));
		}
		
		if (x_172381.doSort) {
		F.line = 104;
		x_172381.kids.sort(HEX3Aanonymous_172422);
		}
		
		L2: do {
			F.line = 115;
			var k_172614 = null;
			F.line = 4019;
			var colontmp__173479 = null;
			F.line = 115;
			colontmp__173479 = x_172381.kids;
			F.line = 4021;
			var i_173481 = 0;
			F.line = 4022;
			var l_173482 = (colontmp__173479 != null ? colontmp__173479.length : 0);
			L3: do {
				F.line = 4023;
					L4: while (true) {
					if (!(i_173481 < l_173482)) break L4;
						F.line = 115;
						k_172614 = colontmp__173479[chckIndx(i_173481, 0, colontmp__173479.length+0-1)-0];
						F.line = 116;
						var y_172615 = to_html_172379(k_172614, false);
						if (!((y_172615 == null))) {
						F.line = 118;
						add_172070(ul_172419, tree_172020(makeNimstrLit("LI"), [y_172615]));
						}
						
						F.line = 4025;
						i_173481 = addInt(i_173481, 1);
						if (!(((colontmp__173479 != null ? colontmp__173479.length : 0) == l_173482))) {
						F.line = 4026;
						failed_assert_impl_57475(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(4026, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		if (!((ul_172419.childNodes.length == 0))) {
		F.line = 119;
		add_172070(result_172383, ul_172419);
		}
		
		if ((result_172383.childNodes.length == 0)) {
		F.line = 120;
		result_172383 = null;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_172383;

}

function replace_by_id_172142(id_172144, new_tree_172145) {
	var F={procname:"dochack.replaceById",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 32;
		var x_172146 = document.getElementById(id_172144);
		F.line = 33;
		x_172146.parentNode.replaceChild(new_tree_172145, x_172146);
		F.line = 34;
		new_tree_172145.id = id_172144;
	framePtr = F.prev;

	
}

function togglevis_173299(d_173301) {
	var F={procname:"dochack.togglevis",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 230;
		    if (d_173301.style.display == 'none')
      d_173301.style.display = 'inline';
    else
      d_173301.style.display = 'none';
  
	framePtr = F.prev;

	
}

function groupBy(value_173317) {
	var F={procname:"dochack.groupBy",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 238;
		var toc_173318 = document.getElementById("toc-list");
		if ((alternative_173285[0] == null)) {
		F.line = 240;
		var tt_173337 = {heading: null, kids: [], sortId: 0, doSort: false};
		F.line = 241;
		to_toc_172673(toc_173318, tt_173337);
		F.line = 242;
		tt_173337 = tt_173337.kids[chckIndx(0, 0, tt_173337.kids.length+0-1)-0];
		F.line = 244;
		var types_173352 = [[]];
		F.line = 245;
		var procs_173367 = [[]];
		F.line = 247;
		extract_items_172309(tt_173337, "Types", types_173352, 0);
		F.line = 248;
		extract_items_172309(tt_173337, "Procs", procs_173367, 0);
		F.line = 249;
		extract_items_172309(tt_173337, "Converters", procs_173367, 0);
		F.line = 250;
		extract_items_172309(tt_173337, "Methods", procs_173367, 0);
		F.line = 251;
		extract_items_172309(tt_173337, "Templates", procs_173367, 0);
		F.line = 252;
		extract_items_172309(tt_173337, "Macros", procs_173367, 0);
		F.line = 253;
		extract_items_172309(tt_173337, "Iterators", procs_173367, 0);
		F.line = 255;
		var ntoc_173375 = build_toc_173048(tt_173337, types_173352[0], procs_173367[0]);
		F.line = 256;
		var x_173376 = to_html_172379(ntoc_173375, true);
		F.line = 257;
		alternative_173285[0] = tree_172020(makeNimstrLit("DIV"), [x_173376]);
		}
		
		if ((value_173317 == "type")) {
		F.line = 259;
		replace_by_id_172142("tocRoot", alternative_173285[0]);
		}
		else {
			F.line = 261;
		replace_by_id_172142("tocRoot", tree_172020(makeNimstrLit("DIV"), []));
		}
		
		F.line = 262;
		togglevis_173299(document.getElementById("toc-list"));
	framePtr = F.prev;

	
}
var db_173485 = [null];
var contents_173487 = [null];
var oldtoc_173744 = [null];
var timer_173745 = [null];

function raiseRangeError() {
		var e_53302 = null;
		e_53302 = {m_type: NTI40262, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_53302.message = nimCopy(null, makeNimstrLit("value out of range"), NTI36040);
		e_53302.parent = null;
		raiseException(e_53302, "RangeError");

	
}

function nsuToLowerAsciiChar(c_162980) {
	var result_162981 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"../../lib/pure/strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet2[c_162980] != undefined)) {
		F.line = 222;
		result_162981 = chckRange(addInt(c_162980, 32), 0, 255);
		}
		else {
			F.line = 224;
			result_162981 = c_162980;
		}
		
	framePtr = F.prev;

	return result_162981;

}

function fuzzy_match_171070(pattern_171072, str_171073) {
							var Tmp4;
							var Tmp5;
								var Tmp6;

	var result_171077 = {Field0: 0, Field1: false};

	var F={procname:"fuzzysearch.fuzzyMatch",prev:framePtr,filename:"fuzzysearch.nim",line:0};
	framePtr = F;
		F.line = 37;
		var score_state_171078 = -100;
		F.line = 38;
		var header_matched_171079 = false;
		F.line = 39;
		var unmatched_leading_char_count_171081 = 0;
		F.line = 40;
		var consecutive_match_count_171083 = 0;
		F.line = 41;
		var str_index_171085 = 0;
		F.line = 42;
		var pat_index_171087 = 0;
		F.line = 43;
		var score_171089 = 0;
		L1: do {
			F.line = 49;
				L2: while (true) {
				if (!((str_index_171085 < (str_171073 != null ? str_171073.length : 0)) && (pat_index_171087 < (pattern_171072 != null ? pattern_171072.length : 0)))) break L2;
					L3: do {
						F.line = 51;
						var pattern_char_171096 = nsuToLowerAsciiChar(pattern_171072.charCodeAt(chckIndx(pat_index_171087, 0, pattern_171072.length+0-1)-0));
						F.line = 52;
						var str_char_171097 = nsuToLowerAsciiChar(str_171073.charCodeAt(chckIndx(str_index_171085, 0, str_171073.length+0-1)-0));
						if ((ConstSet3[pattern_char_171096] != undefined)) {
						F.line = 56;
						pat_index_171087 = addInt(pat_index_171087, 1);
						F.line = 57;
						break L3;
						}
						
						if ((ConstSet4[str_char_171097] != undefined)) {
						F.line = 59;
						str_index_171085 = addInt(str_index_171085, 1);
						F.line = 60;
						break L3;
						}
						
						if ((!(header_matched_171079) && (str_char_171097 == 58))) {
						F.line = 65;
						header_matched_171079 = true;
						F.line = 66;
						score_state_171078 = -100;
						F.line = 67;
						score_171089 = Math.trunc(Math.floor((5.0000000000000000e-01 * score_171089)));
						F.line = 68;
						pat_index_171087 = 0;
						F.line = 69;
						str_index_171085 = addInt(str_index_171085, 1);
						F.line = 70;
						break L3;
						}
						
						if ((str_char_171097 == pattern_char_171096)) {
						F.line = 73;
						switch (score_state_171078) {
						case -100:
						case 20:
							F.line = 75;
							score_state_171078 = 10;
							break;
						case 0:
							F.line = 78;
							score_state_171078 = 5;
							F.line = 78;
							score_171089 = addInt(score_171089, score_state_171078);
							break;
						case 10:
						case 5:
							F.line = 81;
							consecutive_match_count_171083 = addInt(consecutive_match_count_171083, 1);
							F.line = 82;
							score_state_171078 = 5;
							F.line = 83;
							score_171089 = addInt(score_171089, mulInt(5, consecutive_match_count_171083));
							if ((score_state_171078 == 10)) {
							F.line = 86;
							score_171089 = addInt(score_171089, 10);
							}
							
							F.line = 88;
							var on_boundary_171172 = (pat_index_171087 == (pattern_171072 != null ? (pattern_171072.length-1) : -1));
							if ((!(on_boundary_171172) && (str_index_171085 < (str_171073 != null ? (str_171073.length-1) : -1)))) {
							F.line = 91;
							var next_pattern_char_171173 = nsuToLowerAsciiChar(pattern_171072.charCodeAt(chckIndx(addInt(pat_index_171087, 1), 0, pattern_171072.length+0-1)-0));
							F.line = 92;
							var next_str_char_171174 = nsuToLowerAsciiChar(str_171073.charCodeAt(chckIndx(addInt(str_index_171085, 1), 0, str_171073.length+0-1)-0));
							F.line = 95;
							if (!!((ConstSet5[next_str_char_171174] != undefined))) Tmp4 = false; else {								Tmp4 = !((next_str_char_171174 == next_pattern_char_171173));							}							on_boundary_171172 = Tmp4;
							}
							
							if (on_boundary_171172) {
							F.line = 100;
							score_state_171078 = 20;
							F.line = 100;
							score_171089 = addInt(score_171089, score_state_171078);
							}
							
							break;
						case -1:
						case -3:
							F.line = 103;
							if (!((ConstSet6[str_171073.charCodeAt(chckIndx(subInt(str_index_171085, 1), 0, str_171073.length+0-1)-0)] != undefined))) Tmp5 = true; else {								if (!(ConstSet7[str_171073.charCodeAt(chckIndx(subInt(str_index_171085, 1), 0, str_171073.length+0-1)-0)] != undefined)) Tmp6 = false; else {									Tmp6 = (ConstSet8[str_171073.charCodeAt(chckIndx(str_index_171085, 0, str_171073.length+0-1)-0)] != undefined);								}								Tmp5 = Tmp6;							}							var is_leading_char_171212 = Tmp5;
							if (is_leading_char_171212) {
							F.line = 110;
							score_state_171078 = 10;
							}
							else {
								F.line = 114;
								score_state_171078 = 0;
								F.line = 114;
								score_171089 = addInt(score_171089, score_state_171078);
							}
							
							break;
						}
						F.line = 115;
						pat_index_171087 = addInt(pat_index_171087, 1);
						}
						else {
							F.line = 118;
							switch (score_state_171078) {
							case -100:
								F.line = 120;
								score_state_171078 = -3;
								F.line = 120;
								score_171089 = addInt(score_171089, score_state_171078);
								break;
							case 5:
								F.line = 123;
								score_state_171078 = -1;
								F.line = 123;
								score_171089 = addInt(score_171089, score_state_171078);
								F.line = 124;
								consecutive_match_count_171083 = 0;
								break;
							case -3:
								if ((unmatched_leading_char_count_171081 < 3)) {
								F.line = 128;
								score_state_171078 = -3;
								F.line = 128;
								score_171089 = addInt(score_171089, score_state_171078);
								}
								
								F.line = 129;
								unmatched_leading_char_count_171081 = addInt(unmatched_leading_char_count_171081, 1);
								break;
							default: 
								F.line = 132;
								score_state_171078 = -1;
								F.line = 132;
								score_171089 = addInt(score_171089, score_state_171078);
								break;
							}
						}
						
						F.line = 134;
						str_index_171085 = addInt(str_index_171085, 1);
					} while(false);
				}
		} while(false);
		F.line = 136;
		nimCopy(result_171077, {Field0: nimMax(0, score_171089), Field1: (0 < score_171089)}, NTI171074);
	framePtr = F.prev;

	return result_171077;

}

function text_172105(s_172107) {
	var result_172108 = null;

	var F={procname:"dochack.text",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 26;
		result_172108 = document.createTextNode(toJSStr(s_172107));
	framePtr = F.prev;

	return result_172108;

}

function dosearch_173504(value_173506) {

		function HEX3Aanonymous_173671(a_173680, b_173681) {
			var result_173685 = 0;

			var F={procname:"dosearch.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
				F.line = 305;
				result_173685 = subInt(b_173681["Field1"], a_173680["Field1"]);
			framePtr = F.prev;

			return result_173685;

		}

	var result_173507 = null;

	var F={procname:"dochack.dosearch",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if (((db_173485[0] != null ? db_173485[0].length : 0) == 0)) {
		F.line = 272;
		var stuff_173513 = null;
		F.line = 273;
		    var request = new XMLHttpRequest();
    request.open("GET", "theindex.html", false);
    request.send(null);

    var doc = document.implementation.createHTMLDocument("theindex");
    doc.documentElement.innerHTML = request.responseText;

    //parser=new DOMParser();
    //doc=parser.parseFromString("<html></html>", "text/html");

    stuff_173513 = doc.documentElement;
    
		F.line = 286;
		db_173485[0] = nimCopy(null, stuff_173513.getElementsByClassName("reference"), NTI64042);
		F.line = 287;
		contents_173487[0] = nimCopy(null, [], NTI173526);
		L1: do {
			F.line = 288;
			var ahref_173614 = null;
			F.line = 4021;
			var i_173813 = 0;
			F.line = 4022;
			var l_173814 = (db_173485[0] != null ? db_173485[0].length : 0);
			L2: do {
				F.line = 4023;
					L3: while (true) {
					if (!(i_173813 < l_173814)) break L3;
						F.line = 288;
						ahref_173614 = db_173485[0][chckIndx(i_173813, 0, db_173485[0].length+0-1)-0];
						F.line = 289;
						if (contents_173487[0] != null) { contents_173487[0].push(ahref_173614.getAttribute("data-doc-search-tag")); } else { contents_173487[0] = [ahref_173614.getAttribute("data-doc-search-tag")]; };
						F.line = 4025;
						i_173813 = addInt(i_173813, 1);
						if (!(((db_173485[0] != null ? db_173485[0].length : 0) == l_173814))) {
						F.line = 4026;
						failed_assert_impl_57475(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(4026, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		}
		
		F.line = 290;
		var ul_173625 = tree_172020(makeNimstrLit("UL"), []);
		F.line = 291;
		result_173507 = tree_172020(makeNimstrLit("DIV"), []);
		F.line = 292;
		set_class_172088(result_173507, makeNimstrLit("search_results"));
		F.line = 293;
		var matches_173644 = [];
		L4: do {
			F.line = 294;
			var i_173657 = 0;
			F.line = 3053;
			var colontmp__173820 = 0;
			F.line = 294;
			colontmp__173820 = (db_173485[0] != null ? db_173485[0].length : 0);
			F.line = 3054;
			var i_173821 = 0;
			L5: do {
				F.line = 3055;
					L6: while (true) {
					if (!(i_173821 < colontmp__173820)) break L6;
						F.line = 294;
						i_173657 = i_173821;
						L7: do {
							F.line = 295;
							var c_173658 = contents_173487[0][chckIndx(i_173657, 0, contents_173487[0].length+0-1)-0];
							if (((c_173658 == "Examples") || (c_173658 == "PEG construction"))) {
							F.line = 300;
							break L7;
							}
							
							F.line = 301;
							var colontmp__173830 = {Field0: 0, Field1: false};
							F.line = 301;
							var score_173659 = 0;
							F.line = 301;
							var matched_173660 = false;
							F.line = 301;
							nimCopy(colontmp__173830, fuzzy_match_171070(value_173506, c_173658), NTI171074);
							F.line = 301;
							score_173659 = colontmp__173830["Field0"];
							F.line = 301;
							matched_173660 = colontmp__173830["Field1"];
							if (matched_173660) {
							F.line = 303;
							if (matches_173644 != null) { matches_173644.push({Field0: db_173485[0][chckIndx(i_173657, 0, db_173485[0].length+0-1)-0], Field1: score_173659}); } else { matches_173644 = [{Field0: db_173485[0][chckIndx(i_173657, 0, db_173485[0].length+0-1)-0], Field1: score_173659}]; };
							}
							
						} while(false);
						F.line = 3057;
						i_173821 = addInt(i_173821, 1);
					}
			} while(false);
		} while(false);
		F.line = 305;
		matches_173644.sort(HEX3Aanonymous_173671);
		L8: do {
			F.line = 306;
			var i_173724 = 0;
			F.line = 3053;
			var colontmp__173826 = 0;
			F.line = 306;
			colontmp__173826 = nimMin((matches_173644 != null ? matches_173644.length : 0), 19);
			F.line = 3054;
			var i_173827 = 0;
			L9: do {
				F.line = 3055;
					L10: while (true) {
					if (!(i_173827 < colontmp__173826)) break L10;
						F.line = 306;
						i_173724 = i_173827;
						F.line = 307;
						matches_173644[chckIndx(i_173724, 0, matches_173644.length+0-1)-0]["Field0"].innerHTML = matches_173644[chckIndx(i_173724, 0, matches_173644.length+0-1)-0]["Field0"].getAttribute("data-doc-search-tag");
						F.line = 308;
						add_172070(ul_173625, tree_172020(makeNimstrLit("LI"), [matches_173644[chckIndx(i_173724, 0, matches_173644.length+0-1)-0]["Field0"]]));
						F.line = 3057;
						i_173827 = addInt(i_173827, 1);
					}
			} while(false);
		} while(false);
		if ((ul_173625.childNodes.length == 0)) {
		F.line = 310;
		add_172070(result_173507, tree_172020(makeNimstrLit("B"), [text_172105(makeNimstrLit("no search results"))]));
		}
		else {
			F.line = 312;
			add_172070(result_173507, tree_172020(makeNimstrLit("B"), [text_172105(makeNimstrLit("search results"))]));
			F.line = 313;
			add_172070(result_173507, ul_173625);
		}
		
	framePtr = F.prev;

	return result_173507;

}

function search() {

		function wrapper_173761() {
			var F={procname:"search.wrapper",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
				F.line = 320;
				var elem_173763 = document.getElementById("searchInput");
				F.line = 321;
				var value_173764 = elem_173763.value;
				if (!(((value_173764 != null ? value_173764.length : 0) == 0))) {
				if ((oldtoc_173744[0] == null)) {
				F.line = 324;
				oldtoc_173744[0] = document.getElementById("tocRoot");
				}
				
				F.line = 325;
				var results_173770 = dosearch_173504(value_173764);
				F.line = 326;
				replace_by_id_172142("tocRoot", results_173770);
				}
				else {
				if (!((oldtoc_173744[0] == null))) {
				F.line = 328;
				replace_by_id_172142("tocRoot", oldtoc_173744[0]);
				}
				}
			framePtr = F.prev;

			
		}

	var F={procname:"dochack.search",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if (!((timer_173745[0] == null))) {
		F.line = 330;
		clearTimeout(timer_173745[0]);
		}
		
		F.line = 331;
		timer_173745[0] = setTimeout(wrapper_173761, 400);
	framePtr = F.prev;

	
}
